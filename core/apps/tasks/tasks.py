"""
–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:
https://docs.celeryq.dev/en/stable/django/first-steps-with-django.html
"""

from celery import shared_task
from django.utils import timezone
import requests

from .models import Task
from .constants import (
    TELEGRAM_API_URL,
    LOG_CELERY_TASK_NOT_FOUND,
    LOG_CELERY_NO_TELEGRAM_USER,
    LOG_CELERY_INVALID_USERNAME_FORMAT,
    LOG_CELERY_MESSAGE_SENT,
    LOG_CELERY_TELEGRAM_API_ERROR,
    LOG_CELERY_SEND_ERROR,
    LOG_CELERY_MISSING_CREDENTIALS,
    REMINDER_MESSAGE_TEMPLATE,
    EMPTY_DESCRIPTION,
    EMPTY_CATEGORY,
    RUSSIAN_MONTHS,
)


def send_tg_message(chat_id: int, text: str) -> None:
    """
    –û–¢–ü–†–ê–í–õ–Ø–ï–¢ –°–û–û–ë–©–ï–ù–ò–ï –í TELEGRAM –ß–ï–†–ï–ó BOT API

    –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
    1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –∏ ID —á–∞—Ç–∞
    2. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST-–∑–∞–ø—Ä–æ—Å –∫ Telegram API
    3. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏
    4. –õ–æ–≥–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - chat_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram (123456789)
    - text: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏

    –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞:
    send_tg_message(123456789, "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–¥–∞—á–µ!")
    """

    from .constants import BOT_TOKEN

    if not BOT_TOKEN or not chat_id:
        print(
            LOG_CELERY_MISSING_CREDENTIALS.format(
                bool(BOT_TOKEN),
                chat_id,
            )
        )
        return

    try:
        response = requests.post(
            TELEGRAM_API_URL,
            json={
                "chat_id": chat_id,
                "text": text,
                "parse_mode": "HTML",
            },
            timeout=10,
        )
        if response.status_code != 200:
            print(
                LOG_CELERY_TELEGRAM_API_ERROR.format(
                    response.status_code,
                    response.text,
                )
            )
        else:
            print(LOG_CELERY_MESSAGE_SENT.format(chat_id))
    except Exception as e:
        print(LOG_CELERY_SEND_ERROR.format(e))


def format_russian_datetime(dt):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –≤ —Ä—É—Å—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç."""

    hour = dt.hour
    minute = f"{dt.minute:02d}"

    return f"{hour}:{minute}, {dt.day} {RUSSIAN_MONTHS[dt.month-1]} {dt.year}"


@shared_task
def send_task_reminder(task_pk):
    """
    –û–¢–ü–†–ê–í–õ–Ø–ï–¢ –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï –í TELEGRAM –û –ó–ê–î–ê–ß–ï

    –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
    1. –ù–∞—Ö–æ–¥–∏—Ç –∑–∞–¥–∞—á—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ primary key
    2. –ò–∑–≤–ª–µ–∫–∞–µ—Ç Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ username (—Ñ–æ—Ä–º–∞—Ç: tg_123456)
    3. –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ä—É—Å—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    4. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

    –ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è:
    ‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–¥–∞—á–µ

    üìå –ö—É–ø–∏—Ç—å –º–æ–ª–æ–∫–æ
    üìÉ –ù–µ –º–µ–Ω—å—à–µ 3,2%
    üî• –°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: 8:00, 15 –æ–∫—Ç—è–±—Ä—è 2025
    üîñ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ü–æ–∫—É–ø–∫–∏
    """

    try:
        task = Task.objects.select_related("user").get(pk=task_pk)
    except Task.DoesNotExist:
        print(LOG_CELERY_TASK_NOT_FOUND.format(task_pk))
        return

    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ telegram_id –∏–∑ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ñ–æ—Ä–º–∞—Ç: tg_123456)
    if not task.user or not task.user.username.startswith("tg_"):
        print(LOG_CELERY_NO_TELEGRAM_USER.format(task.name))
        return

    try:
        telegram_id = int(task.user.username.replace("tg_", ""))
    except (ValueError, AttributeError):
        print(LOG_CELERY_INVALID_USERNAME_FORMAT.format(task.user.username))
        return

    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤ —á–∞—Å–æ–≤–æ–π –∑–æ–Ω–µ –ú–æ—Å–∫–≤—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    moscow_tz = timezone.get_current_timezone()  # –¢–µ–ø–µ—Ä—å –±—É–¥–µ—Ç Europe/Moscow
    local_dt = timezone.localtime(task.end_date, moscow_tz)

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    description = task.description or EMPTY_DESCRIPTION
    category_name = task.category.name if task.category else EMPTY_CATEGORY
    formatted_date = format_russian_datetime(local_dt)

    # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–¥–∞—á–µ
    message = REMINDER_MESSAGE_TEMPLATE.format(
        task.name, description, formatted_date, category_name
    )

    send_tg_message(telegram_id, message)
